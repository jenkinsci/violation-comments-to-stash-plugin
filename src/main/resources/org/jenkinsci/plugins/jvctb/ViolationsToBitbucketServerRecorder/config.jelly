<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core"
  xmlns:d="jelly:define"
  xmlns:f="/lib/form"
  xmlns:l="/lib/layout"
  xmlns:st="jelly:stapler"
  xmlns:t="/lib/hudson"
  xmlns:c="/lib/credentials">

  <!-- descriptor is ViolationsToBitbucketServerDescriptor //-->
  <j:set var="config" value="${descriptor.newConfig}"/>
  <j:if test="${instance != null}">
    <!-- instance is ViolationsToBitbucketServerRecorder //-->
    <j:set var="config" value="${instance.config}"/>
  </j:if>
  
  

  <f:entry>
    <table>
      <tr>
        <td>
          Bitbucket Server
        </td>
      </tr>
    </table>
  </f:entry>

  <f:optionalBlock checked="${config.useUsernamePasswordCredentials}" name="useUsernamePasswordCredentials" title="Use username / password credentials" inline="true">
    <f:entry title="Username / Password Credential" field="usernamePasswordCredentialsId">
      <c:select default="${config.usernamePasswordCredentialsId}"/>
    </f:entry>
    <f:description>
      Will default to global config.
    </f:description>
  </f:optionalBlock>

  <f:optionalBlock checked="${config.useUsernamePassword}" name="useUsernamePassword" title="Use username and password" inline="true">
    <f:entry title="Username">
      <f:textbox name="username" value="${config.username}" />
    </f:entry>

    <f:entry title="Password">
      <f:password name="password" value="${config.password}" />
    </f:entry>
    
    <f:description>
      Will default to global config.
    </f:description>
  </f:optionalBlock>

  <f:entry>
   You may want to use <a target="_blank" href="https://github.com/tomasbjerre/pull-request-notifier-for-bitbucket">Pull Request Notifier for Bitbucket</a> to get these values.
  </f:entry>

  <f:entry title="Base URL, will default to global config">
    <f:textbox name="bitbucketServerUrl" value="${config.bitbucketServerUrl}" />
  </f:entry>
  
  <f:entry title="Project key, will default to global config">
    <f:textbox name="projectKey" value="${config.projectKey}" />
  </f:entry>
  
  <f:entry title="Repo slug, will default to global config">
    <f:textbox name="repoSlug" value="${config.repoSlug}" />
  </f:entry>

  <f:entry title="Pull Request ID">
    <f:textbox name="pullRequestId" value="${config.pullRequestId}" />
  </f:entry>
  
  <f:entry name="minSeverity" title="Comment only if severity at least" field="minSeverity">
     <select name="minSeverity">
        <f:option value="">Default, global config or INFO if no global config</f:option>
         <f:option value="INFO" selected="${config.minSeverity == 'INFO'}">INFO</f:option>
         <f:option value="WARN" selected="${config.minSeverity == 'WARN'}">WARN</f:option>
         <f:option value="ERROR" selected="${config.minSeverity == 'ERROR'}">ERROR</f:option>
     </select>
  </f:entry>

  <f:entry title="Keep old comments">
    <f:checkbox name="keepOldComments" checked="${config.keepOldComments}"/>
  </f:entry>

  <f:entry title="Create one comment per violation">
    <f:checkbox name="createSingleFileComments" checked="${config.createSingleFileComments}"/>
  </f:entry>

  <f:entry title="Create one big comment with all violations">
    <f:checkbox name="createCommentWithAllSingleFileComments" checked="${config.createCommentWithAllSingleFileComments}"/>
  </f:entry>

  <f:optionalBlock checked="${config.commentOnlyChangedContent}" name="commentOnlyChangedContent" title="Comment only changed part of files" inline="true">
    <f:entry title="Context lines">
      <f:textbox name="commentOnlyChangedContentContext" value="${config.commentOnlyChangedContentContext}" />
    </f:entry>
    
    <f:description>
      Any comment within a changed line +/- context will be used.
    </f:description>
  </f:optionalBlock>

  <f:entry>
  <table class="xmlFilenamePatterns" cellspacing="5">
    <tr>
      <td align="left" colspan="2">
        <b>Violations configuration</b>
        <ul>
          <li>The <b>pattern</b> may be, for example, <i>.*/findbugs/.*\.xml$</i> to match xml-files, in a folder named findbugs, anywhere in workspace. You try <a href="https://jex.im/regulex/" target="_blank">Regulex</a> for creating your regexp.</li>
          <li>The <b>reporter</b> is optional. The parser name will be used if no reporter specified. It is intended to be the name of the tool reporting the violations. For example if Detekt is used to produce a checkstyle-report, then you may specify Detekt in the reporter field.</li>
        </ul>
      </td>
    </tr>
  </table>
  </f:entry>

  <j:forEach var="violationConfig" items="${config.violationConfigs}" indexVar="i">
    <f:entry title="${violationConfig.parser}">
    <table cellspacing="5">
       <tr>
        <th align="left">
          Pattern
        </th>
        <th align="left">
          Reporter
        </th>
       </tr>
       <tr>
        <td>
          <f:textbox name="descriptor.config.violationConfigs[${i}].pattern" value="${violationConfig.pattern}" />
        </td>
        <td>
          <f:textbox name="descriptor.config.violationConfigs[${i}].reporter" value="${violationConfig.reporter}" />
        </td>
       </tr>
    </table>
    </f:entry>
  </j:forEach>

</j:jelly>
